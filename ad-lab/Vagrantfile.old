# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
vmname = "test"

Vagrant.configure("2") do |config|
  config.vm.define vmname do |cfg|
    cfg.vm.box      = "gusztavvargadr/windows-server-2022-standard"
    cfg.vm.hostname = "test"
      
    cfg.vm.provider "vmware_desktop" do |vm|
      vdiskmanager    = '"C:\\Program Files (x86)\\VMware\\VMware Workstation\\vmware-vdiskmanager.exe"'
      disk_dir        = File.join(File.expand_path(File.dirname(__FILE__)), "extra-disks/#{vmname}")
      extra_vmdk_path = "#{disk_dir}/universal.vmdk".gsub('/', '\\')

      # Create the disk directory and disk if it doesn't exist
      unless File.directory?(disk_dir)
        Dir.mkdir(disk_dir)
      end

      unless File.exists?(extra_vmdk_path)
        system("#{vdiskmanager} -c -s 120GB -t 0 \"#{extra_vmdk_path}\"")
      end

      vm.vmx['nvme0:1.fileName'] = extra_vmdk_path
      vm.vmx['nvme0:1.present'] = "TRUE"
      vm.vmx['nvme0:1.redo'] = ""
      
      vm.gui = true
      vm.vmx["memsize"] = "4096"
      vm.vmx["numvcpus"] = "4"
      vm.vmx["cpuid.coresPerSocket"] = "2"
    end

    cfg.vm.provision "shell", path: "scripts/relabel_cdrom.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/initialize_datadisk.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/install_pwsh_7.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/install_choco.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/install_choco_packages.ps1", privileged: false
    cfg.vm.provision "shell", reboot: true
  end    
end
