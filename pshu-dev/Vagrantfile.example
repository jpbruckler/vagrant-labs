
dc_hostname = "dc"
domain_fqdn = "dev.local"
domain_netbios = "dev"
domain_safemode_password = "Admin123#"
psh_hostname = "irms"

Vagrant.configure("2") do |config|
  config.vm.define "dc" do |cfg|
    config.vm.provider "vmware_desktop" do |v|
      v.gui = true
      v.vmx["memsize"] = "4096"
      v.vmx["numvcpus"] = "4"
      v.vmx["cpuid.coresPerSocket"] = "2"
    end

    cfg.vm.box = "gusztavvargadr/windows-server"
    cfg.vm.hostname = dc_hostname

    # use the plaintext WinRM transport and force it to use basic authentication.
    # NB this is needed because the default negotiate transport stops working
    #    after the domain controller is installed.
    #    see https://groups.google.com/forum/#!topic/vagrant-up/sZantuCM0q4
    cfg.winrm.transport = :plaintext
    cfg.winrm.basic_auth_only = true

    cfg.vm.communicator = "winrm"
    cfg.vm.network :forwarded_port, guest: 5985, host: 5985, id: "winrm", auto_correct: true
    cfg.vm.network :forwarded_port, guest: 22, host: 2222, id: "ssh", auto_correct: true
    cfg.vm.network :forwarded_port, guest: 3389, host: 3389, id: "rdp", auto_correct: true
    cfg.vm.network :private_network, ip: "192.168.56.5"

    cfg.vm.network :forwarded_port, guest: 389, host: 7389, id: "ldap", auto_correct: true
    cfg.vm.network :forwarded_port, guest: 636, host: 7636, id: "ldaps", auto_correct: true

    #cfg.vm.provision "shell", path: "scripts/remove_defender_core.ps1", privileged: false
    #cfg.vm.provision "shell", path: "scripts/disable_wu.ps1", privileged: false
    #cfg.vm.provision "shell", path: "scripts/disable_rdp_nla.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/install_ad.ps1", privileged: false
    cfg.vm.provision "shell", reboot: true
    cfg.vm.provision "shell", path: "scripts/configure_ad.ps1", privileged: false, args: "'#{domain_fqdn}' '#{domain_netbios}' '#{domain_safemode_password}'"
    cfg.vm.provision "shell", path: "scripts/certificate.ps1", privileged: false, args: "'#{dc_hostname}' '#{domain_fqdn}'"
    cfg.vm.provision "shell", reboot: true
    cfg.vm.provision "shell", path: "scripts/install_adexplorer.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/password_policy.ps1", privileged: false, args: "'#{domain_fqdn}'"
    cfg.vm.provision "shell", path: "scripts/importusers.ps1", privileged: false, args: "'#{domain_fqdn}'"
    cfg.vm.provision "shell", path: "scripts/install_server_tools.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/install_software.ps1", privileged: false
  end

  config.vm.define "irms" do |psh|
    config.vm.provider "vmware_desktop" do |v|
      v.gui = true
      v.vmx["memsize"] = "4096"
      v.vmx["numvcpus"] = "4"
      v.vmx["cpuid.coresPerSocket"] = "2"
    end
    psh.winrm.transport = :plaintext
    psh.winrm.basic_auth_only = true
    psh.vm.box = "gusztavvargadr/windows-server"
    psh.vm.hostname = psh_hostname
    psh.vm.network :private_network, ip: "192.168.56.6"
    #psh.vm.disk :disk, size: "40GB"

    psh.vm.communicator = "winrm"
    psh.vm.network :forwarded_port, guest: 5985, host: 5986, id: "winrm", auto_correct: true
    psh.vm.provision "shell", path: "scripts/join_domain.ps1", privileged: false, args: "'#{domain_fqdn}'"
    psh.vm.provision "shell", reboot: true
    psh.vm.provision "shell", path: "scripts/install_server_tools.ps1", privileged: false
    psh.vm.provision "shell", path: "scripts/install_software.ps1", privileged: false
    psh.vm.provision "shell", path: "scripts/pshu_download.ps1", privileged: false
  end
end
